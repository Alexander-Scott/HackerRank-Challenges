#
# Configuration
#
language: cpp
dist: trusty

#
# Tokens
#
env:
  global:
    secure: "bk76Bxq8krWrmI53WY38/p698sl0BrzD4YhgftbVWhBiyQnAuobBDVaiLBgX7xhDTQUlKbwANrZgUrwOMrjwLOLzWrzMI2lvFNc7QS2v0fyakiouthrU8n76h5Cv2L3u6imFsB/SCEhm0dOMHw11bAEIlgN7f6WTVlQUccma+xP7LrR+hGV2F5OBVendBWjtb5Mvu90p4zb1HKPVh6rcZzkyDdJXS/QZ/RXaeW2IgrTTknW7PF1UGjTBZoKVy7Y2V2erbktuNjf4uRGct4jynsfv5NcOiMm1vYThQOYJE3jld/9BwJHVbi//hRemfriBL4CLIAPlMy4PNlmpy9QjKV9FETBihpRxc4DAO6PXgqM4svQEwNeyKsi87MrcVmGfv9s4+KEug8b4e/mhi3U2p5eJsGTS2sae5QJ7ImSL3Fei5NKwIb0fRuZVPUlftKfkj26WiRtaMOA9GYJSq0BmMx9K5y7VV8dV1FzpEoi+HpVETB1Ns2GqOoz1Bs/YzejYhecf7yAEnvOmUao0vweKg+HshPJysd0/KmBjYEij5TZ5FIf9INeCward2ZmWHJZqFMZfIP+Xhv2Ok6aI0+nUw4NStGduH8pq3QipXwD0Xvgwg8SE+14fijjqmbbmrhAX41GDT4wKEbrmgF0K4HV+jgB1MGSLTjOusAZZHrzn028="
#
# Build Dependencies
#
before_script:

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi

#
# Build Matrix
#
matrix:
  include:

  #
  # Doxygen
  #
  - os: linux
    env:
      - TEST="Doxygen"
    addons:
      apt:
        packages:
          - doxygen
    script:
      - cd ..
      - doxygen .doxygen.txt
      - |
        if [[ -s doxygen_warnings.txt ]]; then
          echo "You must fix doxygen before submitting a pull request"
          echo ""
          cat doxygen_warnings.txt
          exit -1
        fi

  #
  # Git Check
  #
  - os: linux
    env:
      - TEST="Git Check"
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

  #
  # Codecov
  #
  - os: linux
    env:
      - TEST="Codecov"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make test
      - cd ..
      - bash <(curl -s https://codecov.io/bash)

  #
  # Coveralls
  #
  - os: linux
    env:
      - TEST="Coveralls"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - pip install --upgrade --user git+git://github.com/eddyxu/cpp-coveralls.git
      - cmake -DENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make test
      - cd ..
      - |
        coveralls --build-root build --gcov-options '\-lp' \
          -e build/external \
          -e build/include \
          -e build/CMakeFiles/3.8.0 \
          -e build/CMakeFiles/feature_tests.c \
          -e build/CMakeFiles/feature_tests.cxx

  #
  # Google Address Sanitizer
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    env:
      - TEST="Google Address Sanitizer"
    script:
      - cmake -DENABLE_ASAN=ON -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make test

  #
  # Google Undefined Sanitizer
  #
  - os: linux
    env:
      - TEST="Google Undefined Sanitizer"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_USAN=ON -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make test

  #
  # Google Thread Sanitizer
  #
  - os: linux
    env:
      - TEST="Google Thread Sanitizer"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_TSAN=ON -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make test

  #
  # G++ 5
  #
  - os: linux
    env:
      - TEST="G++ 5"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-5
          - g++-5
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-5" ..
      - make
      - make test

  #
  # G++ 6
  #
  - os: linux
    env:
      - TEST="G++ 6"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make test

  #
  # Clang 3.8
  #
  - os: linux
    env:
      - TEST="Clang 3.8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-3.8
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-3.8 -DCMAKE_CXX_COMPILER=clang++-3.8 ..
      - make
      - make test

  #
  # Clang 3.9
  #
  - os: linux
    env:
      - TEST="Clang 3.9"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-3.9
        packages:
          - clang-3.9
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-3.9 -DCMAKE_CXX_COMPILER=clang++-3.9 ..
      - make
      - make test

  #
  # Clang 4.0
  #
  - os: linux
    env:
      - TEST="Clang 4.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-4.0 -DCMAKE_CXX_COMPILER=clang++-4.0 ..
      - make
      - make test

  #
  # XCode 7.3
  #
  - os: osx
    env:
      - TEST="XCode 7.3"
    osx_image: xcode7.3
    script:
      - cmake ..
      - make
      - make test

  #
  # XCode 8
  #
  - os: osx
    env:
      - TEST="XCode 8"
    osx_image: xcode8
    script:
      - cmake ..
      - make
      - make test

  #
  # XCode 8.1
  #
  - os: osx
    env:
      - TEST="XCode 8.1"
    osx_image: xcode8.1
    script:
      - cmake ..
      - make
      - make test

  #
  # XCode 8.2
  #
  - os: osx
    env:
      - TEST="XCode 8.2"
    osx_image: xcode8.2
    script:
      - cmake ..
      - make
      - make test

  #
  # XCode 8.3
  #
  - os: osx
    env:
      - TEST="XCode 8.3"
    osx_image: xcode8.3
    script:
      - cmake ..
      - make
      - make test
